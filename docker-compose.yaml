services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: "-javaagent:/opt/jmx_prometheus_javaagent.jar=9404:/opt/kafka_jmx_exporter.yml \
        -Dcom.sun.management.jmxremote \
        -Dcom.sun.management.jmxremote.port=9999 \
        -Dcom.sun.management.jmxremote.rmi.port=9999 \
        -Dcom.sun.management.jmxremote.authenticate=false \
        -Dcom.sun.management.jmxremote.ssl=false \
        -Djava.rmi.server.hostname=localhost"
    volumes:
      - ./monitoring/jmx_exporter/jmx_prometheus_javaagent-1.1.0.jar:/opt/jmx_prometheus_javaagent.jar:ro
      - ./monitoring/jmx_exporter/kafka_jmx_exporter.yaml:/opt/kafka_jmx_exporter.yml:ro
    ports:
      - "9092:9092"
      - "9404:9404"
      - "9999:9999"
    depends_on:
      - zookeeper

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka_exporter
    environment:
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alert.rules.yaml:/etc/prometheus/alert.rules.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - kafka-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
         - ./monitoring/alertmanager/alertmanager.yaml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    restart: unless-stopped


